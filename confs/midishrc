# Load
dmmctx {}
dclktx  {}
# DISPOSITIVOS
#import "/root/output.mid"
#dnew 0 "14:1" rw

dnew 1 "FLUID Synth (fluidsynthmidi)" wo

# dnew 2 "ZynAddSubFX" wo 
# dnew 2 "yoshimi" wo
# WORK ARROUND
# MIDISH NO SE COMUNICA DIRECTAMENTE CON YOSHSIMI 
dnew 2 "a2j_bridge" wo

# INPUTS
dnew 3 "Origin49" ro
#inew from_kb {3 0} 


# DUMP & THRU 
# dnew 14 "14:0" rw
# inew from_thru {14 0} 
# onew to_thru {14 0} 

dnew 15 "aseqdump" wo
onew dump {15 0} 


# OUTPUTS 
# WaveTable

## Analog
onew to_zynad0 {2 0} 
#onew to_zynad1 {2 1} 
#onew to_zynad2 {2 2} 
#onew to_zynad3 {2 3} 
#onew to_zynad4 {2 4} 
#onew to_zynad5 {2 5} 
#onew to_zynad6 {2 6} 
#onew to_zynad7 {2 7} 
#
#onew to_drums0 {1 8} 
#onew to_drums1 {1 9} 
#onew to_fluid0 {1 0} 
#onew to_fluid1 {1 1} 
#onew to_fluid2 {1 2} 
#onew to_fluid3 {1 3} 
#onew to_fluid4 {1 4} 
#onew to_fluid5 {1 5} 

## FILTERS

# Drop Pitch Bend
# del teclado por que anda mal en el teclado

fnew kb_analog 
#fmap { any { 3 0 } } { any { 2 0 } }
fmap { note { 3 0 } } { note { 2 0 } }
fmap { ctl { 3 0 } 7 } { ctl {  2 0 } 7 }
fmap { ctl { 3 0 } 12 } { ctl {  2 0 } 74 }
#fmap { ctl { 3 0 }  } { ctl {  2 0 }  }

#
# WARNING: si se usa map "any" pisa map "note" previo
#fmap { any { 3 0 } } { any { 15 0 } }
#
fmap { note { 3 0 } } { note { 15 0 } }
#fmap { ctl { 3 0 } } { ctl { 15 0 } }

# rango de canales pisa mapeos individuales
# fmap { any {  0 0..15} } { any { 15 0..15 } }
# fmap { any { 14 0..15} } { any { 15 0..15 } }


#fnew file_fluid
#
## FROM FILE TO SYNTHS
#fmap { any { 0 0 } } { any { 2 0 } } # ZynAdd BASS 
#fmap { any { 0 1 } } { any { 2 1 } } # ZynAdd DX4 
#fmap { any { 0 2 } } { any { 2 2 } } # ZynAdd ELECTRIC PIANO
#fmap { any { 0 3 } } { any { 2 3 } } # ZynAdd 
#fmap { any { 0 4 } } { any { 2 4 } } # ZynAdd 
#fmap { any { 0 5 } } { any { 2 5 } } # ZynAdd 
#fmap { any { 0 6 } } { any { 2 6 } } # ZynAdd 
#fmap { any { 0 7 } } { any { 2 7 } } # ZynAdd 
#
#fmap { any { 0 8 } } { any { 1 8 } } # Fluid DRUM
#fmap { any { 0 9 } } { any { 1 9 } } # Fluid TR 808
#fmap { any { 0 10 } } { any { 1 10 } } # Fluid BAJO
#fmap { any { 0 11 } } { any { 1 11 } } # Fluid ORGANO
#fmap { any { 0 12 } } { any { 1 12 } } # Fluid PIANO ACUSTICO
#fmap { any { 0 13 } } { any { 1 13 } } # Fluid
#fmap { any { 0 14 } } { any { 1 14 } } # Fluid
#fmap { any { 0 15 } } { any { 1 15 } } # Fluid
#
## FROM THROUGH TO SYNTHS
#fmap { any { 14 0 } } { any { 2 0 } } # ZynAdd BASS 
#fmap { any { 14 1 } } { any { 2 1 } } # ZynAdd DX4 
#fmap { any { 14 2 } } { any { 2 2 } } # ZynAdd ELECTRIC PIANO
#fmap { any { 14 3 } } { any { 2 3 } } # ZynAdd 
#fmap { any { 14 4 } } { any { 2 4 } } # ZynAdd 
#fmap { any { 14 5 } } { any { 2 5 } } # ZynAdd 
#fmap { any { 14 6 } } { any { 2 6 } } # ZynAdd 
#fmap { any { 14 7 } } { any { 2 7 } } # ZynAdd 
#
#fmap { any { 14 8 } } { any { 1 8 } } # Fluid DRUM
#fmap { any { 14 9 } } { any { 1 9 } } # Fluid TR 808
#
#fmap { any { 14 10 } } { any { 1 10 } } # Fluid BAJO
#fmap { any { 14 11 } } { any { 1 11 } } # Fluid ORGANO
#fmap { any { 14 12 } } { any { 1 12 } } # Fluid PIANO ACUSTICO
#fmap { any { 14 13 } } { any { 1 13 } } # Fluid
#fmap { any { 14 14 } } { any { 1 14 } } # Fluid
#fmap { any { 14 15 } } { any { 1 15 } } # Fluid
 
# cf file_fluid

metrocf {non { 1 9 } 31 127} {non { 1 9} 31 110 }
m on
t 100

proc cargar track{
  import $track 
  g 0                             # go to the beginning
  sel [mend]                      # select to the end
  for t in [tlist] {              # for each track:
    ct $t                   # make it the current track
    # tevmap {any 0 } {any 1}  # set all events device 0 -> 1
    tevmap { any { 0 0..7 } } { any { 2 0..7 } }  
    tevmap { any { 0 8..15 } } { any { 1 8..15 } }  
  }

  metrocf {non { 1 9 } 31 127} {non { 1 9} 31 110 }
  p
  #m on
}

# dmmctx { devnum1 devnum2 ... }
# Configure the given devices to transmit MMC start, stop and relocate messages.
# Useful to control MMC-capable audio applications from midish. By default,
# devices transmit MMC. 
# 
# dclktx { devnum1 devnum2 ... }
# Configure the given devices to transmit MIDI clock information (MIDI ticks,
# MIDI start and MIDI stop events). Useful to synchronize an external sequencer
# to midish. 
# 
# dclkrx devnum
# set device number ``devnum'' to be the master MIDI clock source. It will give
# midish MIDI ticks, MIDI start and MIDI stop events. This useful to synchronize
# midish to an external sequencer. If ``devnum'' is ``nil'', then the internal
# clock will be used and midish will act as master device. 

# 1  Pitch bend
# 2  Modullation wheel (Controller number 1)
# 3  Volume (no. 7)
# 4  Pan (no. 10)
# 5  Expression (no. 11)
#
# 6  Sustain (no. 64)
# 7  Portamento On/Off (no. 65)
# 8  Filter Q (no. 71)
# 9  Filter cutoff (no. 74)
# 10 All sound off (no. 120)
# 11 Reset all controlers (no. 121)
# 12 All notes off (no. 123) 
